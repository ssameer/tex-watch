#!/bin/bash

# TODO: Obtain dependencies automatically and recursively from the main LaTex file
# TODO: Will not detect changes to preamble if PRECOMPILE is used

show_help() {
  cat << EOF
  Usage: tex-watch [-h] [-l LATEX] [-v VIEWER] [-b BIBTEX] [-o OUTPUT_DIR] MAINFILE.tex [FILES] [DIRECTORIES] ...
  Recompile MAINFILE.tex whenever it or FILES or DIRECTOIRES change and update
  (or launch) mupdf to show the output if compilation is successful.

  -h        Display this help and exit
  -v        Alternate viewer [mupdf]
  -l        Alternate latex compiler [pdflatex]
  -b        Alternate bibtex program [bibtex8] Use false to disable bibtex
  -o        Output directory (if not the current directory)
  -p        Use precompiled preamble
  DIRECTORIES   These are added to TEXINPUTS

  Requirements: inotify-tools and optionally mupdf (fast pdf viewer),
  texlive-mylatexformat (precompiled preamble).
EOF
}

# mupdf needs reload signal; okular, evince, xpdf, skim, ghostview auto-reload. No support for acroread.
VIEWER=mupdf
LATEX=pdflatex
BIBTEX=bibtex8   # set to false to disable bibtex
OUTPUT_DIR=
PRECOMPILE=false # Use precompiled preamble
# Set RERUN to run Latex multiple times to resolve citations / references. Not needed in normal workflow.
RERUN=false
while getopts "hv:l:b:o:p" OPT; do
  case "$OPT" in
    h) show_help
      exit 0 ;;
    v) VIEWER="$OPTARG" ;;
    l) LATEX="$OPTARG" ;;
    b) BIBTEX="$OPTARG" ;;
    o) OUTPUT_DIR="$OPTARG" ;;
    p) PRECOMPILE=true ;;
  esac
done
shift "$((OPTIND-1))" 
if [ $# -eq 0 ]; then
  show_help
  exit 1
fi
ARGS="-interaction=nonstopmode -synctex=1 ${OUTPUT_DIR:+-output-directory=$OUTPUT_DIR}"
if [ -v OUTPUT_DIR ]; then
  [ -d $OUTPUT_DIR ] || mkdir -p $OUTPUT_DIR
  export BIBINPUTS=$OUTPUT_DIR:$BIBINPUTS # biblatex puts generated *-blx.bib in OUTPUT_DIR
fi


# Do we need to run BibTeX? Might be better to just run it instead of checking...
run_bibtex() { # bbl file used according to $1.log && bib file was changed or we have undefined citation.
   [[ $2 == *.bib* ]] && grep -F -q "$1.bbl" "$1.log" || grep -q Citation.*undefined "$1.log"  && \
    $BIBTEX "$MAIN" 2>&1 >/dev/null
}

run_latex() {
  pdfout=false
  $LATEX $ARGS "$1" 2>&1 | grep -F -q "Output written on" && pdfout=true
}

# Precompile static preamble
make_format() {
  if `$PRECOMPILE` && [ ! -s "$MAIN.fmt" ]; then
    [[ `head -c 2 "$MAINTEX"` == "%&" ]] && grep -F -q endofdump "$MAINTEX" && 
    $LATEX $ARGS -ini -jobname "${MAIN##*/}" "&pdflatex" mylatexformat.ltx "$MAINTEX" 2>&1 >/dev/null
  fi
}

compile() {
  make_format;
  run_latex "$MAINTEX" && run_bibtex "$MAIN" "$1" && `$RERUN` && run_latex "$MAINTEX"
}

# Do we need to rerun LaTeX?
check_rerun() {
  grep -F -q Rerun "$1.log" 
}

view() {
  if $pdfout; then
    if vpid=$(pgrep -f "$VIEWER.*$OUT") ; then
      [[ $VIEWER == mupdf* ]] && kill -HUP $vpid; # mupdf requires a reload signal
    else
      $VIEWER "$OUT" &
    fi
  fi
}

watch_files() {
  while true; do
    inotifywait -q -e modify -e delete_self "$@"
  done
}

for f in "$@"; do
  if [ ! -e "$f" ]; then 
    echo "File $f doesn't exist.";
    exit 1;
  fi
  if [ -d "$f" ]; then          # Add directories to TEXINPUTS
    export TEXINPUTS="$f":$TEXINPUTS
  fi
done
MAINTEX="$1"
MAIN="${OUTPUT_DIR:+$OUTPUT_DIR/}${MAINTEX%%.tex}"
OUT="$MAIN.pdf"

compile "$event"; view;
watch_files $@ | while read event ;
do
  compile "$event"; view;
  [ -r $MAINTEX ] || { sleep 5 && [ -r $MAINTEX ] || exit 1 ; }  # File not found for 5 seconds
done &
